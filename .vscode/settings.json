{
    "files.watcherExclude": {
        "**/routeTree.gen.ts": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    "search.exclude": {
        "**/routeTree.gen.ts": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    "files.readonlyInclude": {
        "**/routeTree.gen.ts": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true
    },
    "highlight.regexes": {
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *TODO(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#ffcc00",
                    "backgroundColor": "#ffcc00",
                    "color": "#000000",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#ffcc00",
                    "color": "#000000"
                }
            ]
        },
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *IMPORTANT(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#c24ccf",
                    "backgroundColor": "#c24ccf",
                    "color": "#000000",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#c24ccf",
                    "color": "#000000"
                }
            ]
        },
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:FIXME|FIX|BUG|UGLY|DEBUG|HACK)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#cc0000",
                    "backgroundColor": "#cc0000",
                    "color": "#ffffff",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#cc0000",
                    "color": "#ffffff"
                }
            ]
        },
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:WARN|WARNING)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#ffcc00",
                    "backgroundColor": "#ffcc00",
                    "color": "#000000",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#ffcc00",
                    "color": "#000000"
                }
            ]
        },
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:NOTE|INFO|REVIEW|OPTIMIZE|TSC)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#00ccff",
                    "backgroundColor": "#00ccff",
                    "color": "#000000",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#00ccff",
                    "color": "#000000"
                }
            ]
        },
        "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:IDEA)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
            "filterFileRegex": ".*(?<!CHANGELOG.md)$",
            "decorations": [
                {
                    "overviewRulerColor": "#cc00cc",
                    "backgroundColor": "#cc00cc",
                    "color": "#1f1f1f",
                    "fontWeight": "bold"
                },
                {
                    "backgroundColor": "#cc00cc",
                    "color": "#1f1f1f"
                }
            ]
        }
    },
    "highlight.decorations": { "rangeBehavior": 3 }, // Default decorations from which all others inherit from
    "highlight.regexFlags": "gi", // Default flags used when building the regexes
    "highlight.minDelay": 50, // Minimum number of milliseconds to wait before highlighting the document after a change, used for throttling
    "highlight.maxMatches": 250, // Maximum number of matches to decorate per regex, in order not to crash the app with accidental cathastropic regexes
    "files.autoSave": "afterDelay",
    "editor.gotoLocation.multipleDefinitions": "goto",
    "cSpell.userWords": [
        "Asrilevich",
        "builderbot",
        "checkin",
        "cheroga",
        "Cheroga",
        "dont",
        "facebook",
        "instagram",
        "Leandro",
        "openai",
        "qazuor",
        "redaxios",
        "vinxi",
        "whatsapp",
        "shadcn"
    ],
    "typescript.updateImportsOnFileMove.enabled": "always",
    "cSpell.language": "en,es",
    "explorer.confirmDelete": false,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "terminal.integrated.env.linux": {},
    // "workbench.colorTheme": "One Dark Pro Night Flat",
    "workbench.iconTheme": "symbols",
    "emojisense.languages": {
        "markdown": true,
        "JavaScript": true,
        "javascript": true,
        "javascriptreact": true,
        "typescriptreact": true,
        "plaintext": {
            "markupCompletionsEnabled": false,
            "emojiDecoratorsEnabled": false
        },
        "scminput": true,
        "git-commit": true
    },
    "editor.linkedEditing": true,
    "todo-tree.filtering.useBuiltInExcludes": "file excludes",
    "color-highlight.hslWithNoFunctionLanguages": ["*"],
    "editor.inlineSuggest.showToolbar": "onHover",
    "workbench.editor.enablePreview": false,
    "git.confirmSync": false,
    "git.suggestSmartCommit": false,
    "editor.guides.bracketPairs": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "workbench.editor.editorActionsLocation": "titleBar",
    "terminal.integrated.env.windows": {},
    "biome.rename": true,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnType": true,
    "editor.defaultFormatter": "biomejs.biome",
    "editor.codeActionsOnSave": {
        "source.organizeImports.biome": "always",
        "quickfix.biome": "always",
        "source.addMissingImports.biome": "explicit",
        "source.fixAll.biome": "explicit"
    },
    "[javascript]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[typescript]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[json]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[css]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "prettier.enable": false,
    "eslint.enable": true,
    "prettier.singleQuote": true,
    "prettier.jsxSingleQuote": true,
    "prettier.quoteProps": "preserve",
    "json.schemaDownload.enable": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
        "app.config.ts": "package.json, package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb, bun.lock, tsconfig.json, tailwind.config.mjs, postcss.config.mjs, biome.jsonc, .editorconfig, .gitattributes, .gitignore, .prettierignore, components.json, vercel.json"
    },
    "editor.guides.bracketPairsHorizontal": true,
    "typescript.suggest.completeFunctionCalls": true,
    "git.blame.statusBarItem.enabled": true,
    "git.blame.editorDecoration.enabled": false,
    "github.copilot.nextEditSuggestions.enabled": true,
    "github.showAvatar": true,
    "files.associations": {
        "*.css": "tailwindcss"
    },
    "editor.quickSuggestions": {
        "strings": "off"
    },
    "tailwindCSS.includeLanguages": {
        "plaintext": "html"
    },
    "editor.colorDecorators": true,
    "cSpell.words": ["badget", "dropbox", "gitlab", "linkedin", "reddit", "spanish", "spotify"],
    "css.lint.unknownAtRules": "ignore",
    "typescript.tsdk": "node_modules/typescript/lib"
}
